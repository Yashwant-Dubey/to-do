{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react/todo/src/component/ToDo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ToDoList from \"./ToDoList\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDo = () => {\n  _s();\n\n  const [inputData, setinputData] = useState(\"\");\n  const [item, setItemList] = useState([]);\n\n  const inputItem = e => {\n    setinputData(e.target.value);\n  };\n\n  const addItem = () => {\n    if (inputData) {\n      setItemList(prevItem => {\n        return [...prevItem, inputData];\n      });\n      setinputData(\"\");\n    } else {\n      alert('Please enter a value');\n    }\n  };\n\n  const deleteItem = id => {\n    setItemList(prevItem => {\n      return prevItem.filter((arrElement, index) => {\n        return index !== id;\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" ToDo List \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"add a item\",\n        value: inputData,\n        onChange: inputItem,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: addItem,\n        children: \"Add item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ToDo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: item.map((itemval, index) => {\n            return /*#__PURE__*/_jsxDEV(ToDoList, {\n              itemval: itemval,\n              id: index,\n              onSelect: deleteItem\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToDo, \"Okw5oFbIxhHzmV2CeY9xRUBf9kg=\");\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/var/www/html/react/todo/src/component/ToDo.jsx"],"names":["React","useState","ToDoList","Button","ToDo","inputData","setinputData","item","setItemList","inputItem","e","target","value","addItem","prevItem","alert","deleteItem","id","filter","arrElement","index","map","itemval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,IAAD,EAAOC,WAAP,IAAsBP,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMQ,SAAS,GAAIC,CAAD,IAAO;AACvBJ,IAAAA,YAAY,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAG,MAAM;AACpB,QAAGR,SAAH,EACA;AACEG,MAAAA,WAAW,CAAEM,QAAD,IAAc;AACxB,eAAO,CAAC,GAAGA,QAAJ,EAAcT,SAAd,CAAP;AACD,OAFU,CAAX;AAGAC,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,KAND,MAMK;AACHS,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AAEF,GAXD;;AAaA,QAAMC,UAAU,GAAIC,EAAD,IAAQ;AACzBT,IAAAA,WAAW,CAAEM,QAAD,IAAc;AACxB,aAAOA,QAAQ,CAACI,MAAT,CAAgB,CAACC,UAAD,EAAaC,KAAb,KAAuB;AAC5C,eAAOA,KAAK,KAAKH,EAAjB;AACD,OAFM,CAAP;AAGD,KAJU,CAAX;AAKD,GAND;;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,YAFd;AAGE,QAAA,KAAK,EAAEZ,SAHT;AAIE,QAAA,QAAQ,EAAEI,SAJZ;AAKE,QAAA,QAAQ,EAAE;AALZ;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAEI,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAeE;AAAA,6BACE;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAA,oBACGN,IAAI,CAACc,GAAL,CAAS,CAACC,OAAD,EAAUF,KAAV,KAAoB;AAC5B,gCACE,QAAC,QAAD;AACE,cAAA,OAAO,EAAEE,OADX;AAGE,cAAA,EAAE,EAAEF,KAHN;AAIE,cAAA,QAAQ,EAAEJ;AAJZ,eAEOI,KAFP;AAAA;AAAA;AAAA;AAAA,oBADF;AAQD,WATA;AADH;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CApED;;GAAMhB,I;;KAAAA,I;AAsEN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ToDoList from \"./ToDoList\";\nimport Button from \"react-bootstrap/Button\";\n\nconst ToDo = () => {\n  const [inputData, setinputData] = useState(\"\");\n  const [item, setItemList] = useState([]);\n\n  const inputItem = (e) => {\n    setinputData(e.target.value);\n  };\n\n  const addItem = () => {\n    if(inputData)\n    {\n      setItemList((prevItem) => {\n        return [...prevItem, inputData];\n      });\n      setinputData(\"\");\n    }else{\n      alert('Please enter a value');\n    }\n    \n  };\n\n  const deleteItem = (id) => {\n    setItemList((prevItem) => {\n      return prevItem.filter((arrElement, index) => {\n        return index !== id;\n      });\n    });\n  };\n  return (\n    <div>\n      <h1> ToDo List </h1>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"add a item\"\n          value={inputData}\n          onChange={inputItem}\n          required={true}\n        />\n        <Button variant=\"success\" onClick={addItem}>\n          Add item\n        </Button>\n      </div>\n\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th>ToDo</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {item.map((itemval, index) => {\n              return (\n                <ToDoList\n                  itemval={itemval}\n                  key={index}\n                  id={index}\n                  onSelect={deleteItem}\n                />\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}