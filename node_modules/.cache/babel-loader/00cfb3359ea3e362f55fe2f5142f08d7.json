{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react/todo/src/component/ToDo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ToDoList from \"./ToDoList\";\nimport { Button, Form, Container, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDo = () => {\n  _s();\n\n  const [inputData, setinputData] = useState(\"\");\n  const [item, setItemList] = useState([]);\n\n  const inputItem = e => {\n    setinputData(e.target.value);\n  };\n\n  const addItem = () => {\n    if (inputData) {\n      setItemList(prevItem => {\n        return [...prevItem, inputData];\n      });\n      setinputData(\"\");\n    } else {\n      alert('Please enter a value');\n    }\n  };\n\n  const deleteItem = id => {\n    setItemList(prevItem => {\n      return prevItem.filter((arrElement, index) => {\n        return index !== id;\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \" ToDo List \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"add a item\",\n              value: inputData,\n              onChange: inputItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              onClick: addItem,\n              children: \"Add item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ToDo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Action\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: item.map((itemval, index) => {\n                  return /*#__PURE__*/_jsxDEV(ToDoList, {\n                    itemval: itemval,\n                    id: index,\n                    onSelect: deleteItem\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToDo, \"Okw5oFbIxhHzmV2CeY9xRUBf9kg=\");\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/var/www/html/react/todo/src/component/ToDo.jsx"],"names":["React","useState","ToDoList","Button","Form","Container","Row","Col","ToDo","inputData","setinputData","item","setItemList","inputItem","e","target","value","addItem","prevItem","alert","deleteItem","id","filter","arrElement","index","map","itemval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,MAAT,EAAgBC,IAAhB,EAAqBC,SAArB,EAA+BC,GAA/B,EAAmCC,GAAnC,QAA8C,iBAA9C;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,IAAD,EAAOC,WAAP,IAAsBX,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMY,SAAS,GAAIC,CAAD,IAAO;AACvBJ,IAAAA,YAAY,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAG,MAAM;AACpB,QAAGR,SAAH,EACA;AACEG,MAAAA,WAAW,CAAEM,QAAD,IAAc;AACxB,eAAO,CAAC,GAAGA,QAAJ,EAAcT,SAAd,CAAP;AACD,OAFU,CAAX;AAGAC,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,KAND,MAMK;AACHS,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AAEF,GAXD;;AAaA,QAAMC,UAAU,GAAIC,EAAD,IAAQ;AACzBT,IAAAA,WAAW,CAAEM,QAAD,IAAc;AACxB,aAAOA,QAAQ,CAACI,MAAT,CAAgB,CAACC,UAAD,EAAaC,KAAb,KAAuB;AAC5C,eAAOA,KAAK,KAAKH,EAAjB;AACD,OAFM,CAAP;AAGD,KAJU,CAAX;AAKD,GAND;;AAOA,sBACE;AAAA,2BAOE,QAAC,SAAD;AAAA,6BACE,QAAC,GAAD;AAAA,gCACE,QAAC,GAAD;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,WAAW,EAAC,YAFd;AAGE,cAAA,KAAK,EAAEZ,SAHT;AAIE,cAAA,QAAQ,EAAEI;AAJZ;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,OAAO,EAAEI,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE,QAAC,GAAD;AAAA,iCACE;AAAA,mCACE;AAAA,sCACE;AAAA,uCACE;AAAA,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAOE;AAAA,0BACGN,IAAI,CAACc,GAAL,CAAS,CAACC,OAAD,EAAUF,KAAV,KAAoB;AAC5B,sCACE,QAAC,QAAD;AACE,oBAAA,OAAO,EAAEE,OADX;AAGE,oBAAA,EAAE,EAAEF,KAHN;AAIE,oBAAA,QAAQ,EAAEJ;AAJZ,qBAEOI,KAFP;AAAA;AAAA;AAAA;AAAA,0BADF;AAQD,iBATA;AADH;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAqDD,CAjFD;;GAAMhB,I;;KAAAA,I;AAmFN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ToDoList from \"./ToDoList\";\nimport { Button,Form,Container,Row,Col } from 'react-bootstrap';\n\nconst ToDo = () => {\n  const [inputData, setinputData] = useState(\"\");\n  const [item, setItemList] = useState([]);\n\n  const inputItem = (e) => {\n    setinputData(e.target.value);\n  };\n\n  const addItem = () => {\n    if(inputData)\n    {\n      setItemList((prevItem) => {\n        return [...prevItem, inputData];\n      });\n      setinputData(\"\");\n    }else{\n      alert('Please enter a value');\n    }\n    \n  };\n\n  const deleteItem = (id) => {\n    setItemList((prevItem) => {\n      return prevItem.filter((arrElement, index) => {\n        return index !== id;\n      });\n    });\n  };\n  return (\n    <div>\n      \n\n      \n\n\n        \n      <Container>\n        <Row>\n          <Col>\n            <h1> ToDo List </h1>\n            <div>\n              <input\n                type=\"text\"\n                placeholder=\"add a item\"\n                value={inputData}\n                onChange={inputItem}\n              />\n              <Button variant=\"success\" onClick={addItem}>\n                Add item\n              </Button>\n            </div>\n          </Col>\n          <Col>\n            <div>\n              <table>\n                <thead>\n                  <tr>\n                    <th>ToDo</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {item.map((itemval, index) => {\n                    return (\n                      <ToDoList\n                        itemval={itemval}\n                        key={index}\n                        id={index}\n                        onSelect={deleteItem}\n                      />\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </Col>\n        </Row>\n\n      </Container>\n    </div>\n  );\n};\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}