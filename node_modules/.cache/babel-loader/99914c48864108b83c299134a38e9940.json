{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react/todo/src/component/ToDo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ToDoList from \"./ToDoList\";\nimport { Button, Form, Container, Row, Col, Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDo = () => {\n  _s();\n\n  const [inputData, setinputData] = useState(\"\");\n  const [item, setItemList] = useState([]);\n\n  const inputItem = e => {\n    setinputData(e.target.value);\n  };\n\n  const addItem = () => {\n    if (inputData) {\n      setItemList(prevItem => {\n        return [...prevItem, inputData];\n      });\n      setinputData(\"\");\n    } else {\n      alert('Please enter a value.');\n    }\n  };\n\n  const deleteItem = id => {\n    setItemList(prevItem => {\n      return prevItem.filter((arrElement, index) => {\n        return index !== id;\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"addTodo\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Add a todo\",\n                  value: inputData,\n                  onChange: inputItem,\n                  maxLength: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"success\",\n                type: \"button\",\n                onClick: addItem,\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \" ToDo List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              striped: true,\n              bordered: true,\n              hover: true,\n              size: \"sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"ToDo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Action\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: item.length ? item.map((itemval, index) => {\n                  return /*#__PURE__*/_jsxDEV(ToDoList, {\n                    itemval: itemval,\n                    id: index,\n                    onSelect: deleteItem\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 23\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"2\",\n                  className: \"center\",\n                  children: \"No data found.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 26\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToDo, \"Okw5oFbIxhHzmV2CeY9xRUBf9kg=\");\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["/var/www/html/react/todo/src/component/ToDo.jsx"],"names":["React","useState","ToDoList","Button","Form","Container","Row","Col","Table","ToDo","inputData","setinputData","item","setItemList","inputItem","e","target","value","addItem","prevItem","alert","deleteItem","id","filter","arrElement","index","length","map","itemval"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ToDoList from \"./ToDoList\";\nimport { Button,Form,Container,Row,Col,Table } from 'react-bootstrap';\n\nconst ToDo = () => {\n  const [inputData, setinputData] = useState(\"\");\n  const [item, setItemList] = useState([]);\n\n  const inputItem = (e) => {\n    setinputData(e.target.value);\n  };\n\n  const addItem = () => {\n    if(inputData)\n    {\n      setItemList((prevItem) => {\n        return [...prevItem, inputData];\n      });\n      setinputData(\"\");\n    }else{\n      alert('Please enter a value.')\n    }\n    \n  };\n\n  const deleteItem = (id) => {\n    setItemList((prevItem) => {\n      return prevItem.filter((arrElement, index) => {\n        return index !== id;\n      });\n    });\n  };\n  return (\n    <div>      \n      <Container>\n        <Row>\n          <Col>\n            <div>\n              <Form>\n                <Form.Group controlId=\"addTodo\">\n                  {/* <Form.Label>Add Todo</Form.Label> */}\n                  <Form.Control type=\"text\" placeholder=\"Add a todo\" value={inputData} onChange={inputItem} maxLength={20}/>                  \n                </Form.Group>\n                <Button variant=\"success\" type=\"button\" onClick={addItem}>\n                  Add\n                </Button>\n              </Form>\n            </div>\n          </Col>\n          <Col>\n            <div>\n              <h3> ToDo List</h3>\n              <Table striped bordered hover size=\"sm\">\n                <thead>\n                  <tr>\n                    <th>ToDo</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {(item.length) ? (item.map((itemval, index) => {\n                    return (\n                      <ToDoList\n                        itemval={itemval}\n                        key={index}\n                        id={index}\n                        onSelect={deleteItem}\n                      />\n                    );\n                  })) : (<td colSpan=\"2\" className=\"center\">No data found.</td>)}\n                  \n                </tbody>\n              </Table>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default ToDo;\n"]},"metadata":{},"sourceType":"module"}